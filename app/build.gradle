buildscript {
    repositories {
        google()
        maven { url "https://jitpack.io" }
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.timfreiheit:ResourcePlaceholdersPlugin:0.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'de.timfreiheit.resourceplaceholders.plugin'

if (!project.hasProperty("MyWarwick.keystore")) {
    throw new Exception("~/.gradle/gradle.properties needs to contain the necessary MyWarwick.* properties.")
}

def buildNumber = 57

android {
    signingConfigs {
        myWarwickPlay {
            keyAlias project.property("MyWarwick.keyAlias")
            keyPassword project.property("MyWarwick.keyPass")
            storeFile file(project.property("MyWarwick.keystore"))
            storePassword project.property("MyWarwick.keyPass")
        }
    }

    compileSdkVersion 32

    defaultConfig {
        applicationId "uk.ac.warwick.my.app"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode buildNumber
        versionName buildNumber + ""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), file('proguard-rules.pro')
            signingConfig signingConfigs.myWarwickPlay
            resValue "string", "app_name", "My Warwick"
            resValue "string", "package_name", android.defaultConfig.applicationId
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "My Warwick dev"
            resValue "string", "package_name", android.defaultConfig.applicationId + applicationIdSuffix
            minifyEnabled false
        }
    }
    namespace 'uk.ac.warwick.my.app'

}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.roughike:bottom-bar:2.3.1'
    implementation 'com.google.guava:guava:24.0-android', {
        exclude group: 'com.google.code.findbugs'
    }
    implementation 'com.github.apl-devs:appintro:v4.2.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // This is in Android, but a stub implementation.
    testImplementation 'org.json:json:20171018'

}

task archiveProguardMapping(type: Sync) {
    from 'build/outputs/mapping/release'
    into "artifacts/build-${buildNumber}/mapping"
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn archiveProguardMapping
    }

    if (task.name == 'transformClassesAndResourcesWithProguardForRelease') {
        archiveProguardMapping.mustRunAfter task
    }
}

resourcePlaceholders {
    // So that ${applicationId} is replaced with the app ID
    files = ['xml-v25/shortcuts.xml']
}

// This needs to be at the bottom because of reasons:
// https://developers.google.com/android/guides/google-services-plugin
apply plugin: 'com.google.gms.google-services'
